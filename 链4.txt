
¥á¨tÕÀ·Å¡«Çà´º ? 2019/4/8 0:00:17
void hebing (list *li1,list *li2)
{
    int n,m;
    n=ListLength(li1);
    m=ListLength(li2);
    for (i=1; i<n; i++)
    {
        Getelem(Li2,i,e);
        if (!LocateElem(L1,e))
            ListInsert(L1,++m,e);
    }
}
int ListLenghth(list *l1)
{
    int i;
    while (l1->next!=NUll)
    {
        i++;
    }
    return i;
}
void Getelem(list *p1,int n,int &e)
{
    int i=1;
    while (i!=n)
    {
        p1=p1->next;
        i++;
    }
    e=p1->num;
}
int LocateElem(stu L1,int e)
{
    while (l1->next != NULL)
    {
        if (l1->num == e) return 1;
    }
    return 0;
}
void ListInsert(list L1,int m,int e)
{
    int i=1;
    list *p;
    while (i!=m)
    {
        l1=l1->next;
        i++;
    }
    p=(struct stu *)malloc(sizeof (struct list));
    p1->next=p;
    p->next=NULL;
    p1->num=e;
}